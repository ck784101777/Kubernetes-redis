apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis    
  replicas: 6
  serviceName: redis-service
  template:
    metadata:
      labels:
        app: redis
        appCluster: redis-cluster
    spec:
      terminationGracePeriodSeconds: 20
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:   
                  - redis
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: redis:6.2.3-alpine
        imagePullPolicy: IfNotPresent 
        command:
          - "redis-server" 
        args:
          - "/etc/redis/redis.conf"  
          - "--protected-mode"  
          - "no"
        ports:
            - name: redis
              containerPort: 6379
              protocol: "TCP"
            - name: cluster
              containerPort: 16379
              protocol: "TCP"
        volumeMounts:
          - name: "redis-conf"  
            mountPath: "/etc/redis" 
          - name: "redis-data" 
            mountPath: "/var/lib/redis"
      volumes:
      - name: "redis-conf"  
        configMap:
          name: "redis-conf"
          items:
            - key: "redis.conf"  
              path: "redis.conf"  
  volumeClaimTemplates:  
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "nfs"  
      resources:
        requests:
          storage: 1Gi
